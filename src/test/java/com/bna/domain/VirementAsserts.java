package com.bna.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class VirementAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVirementAllPropertiesEquals(Virement expected, Virement actual) {
        assertVirementAutoGeneratedPropertiesEquals(expected, actual);
        assertVirementAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVirementAllUpdatablePropertiesEquals(Virement expected, Virement actual) {
        assertVirementUpdatableFieldsEquals(expected, actual);
        assertVirementUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVirementAutoGeneratedPropertiesEquals(Virement expected, Virement actual) {
        assertThat(actual)
            .as("Verify Virement auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVirementUpdatableFieldsEquals(Virement expected, Virement actual) {
        assertThat(actual)
            .as("Verify Virement relevant properties")
            .satisfies(a -> assertThat(a.getCompteBeneficiaire()).as("check compteBeneficiaire").isEqualTo(expected.getCompteBeneficiaire())
            )
            .satisfies(a -> assertThat(a.getMotif()).as("check motif").isEqualTo(expected.getMotif()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertVirementUpdatableRelationshipsEquals(Virement expected, Virement actual) {
        assertThat(actual)
            .as("Verify Virement relationships")
            .satisfies(a -> assertThat(a.getCompte()).as("check compte").isEqualTo(expected.getCompte()))
            .satisfies(a -> assertThat(a.getBeneficiaire()).as("check beneficiaire").isEqualTo(expected.getBeneficiaire()));
    }
}
