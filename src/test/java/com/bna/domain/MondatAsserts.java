package com.bna.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class MondatAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMondatAllPropertiesEquals(Mondat expected, Mondat actual) {
        assertMondatAutoGeneratedPropertiesEquals(expected, actual);
        assertMondatAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMondatAllUpdatablePropertiesEquals(Mondat expected, Mondat actual) {
        assertMondatUpdatableFieldsEquals(expected, actual);
        assertMondatUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMondatAutoGeneratedPropertiesEquals(Mondat expected, Mondat actual) {
        assertThat(actual)
            .as("Verify Mondat auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMondatUpdatableFieldsEquals(Mondat expected, Mondat actual) {
        assertThat(actual)
            .as("Verify Mondat relevant properties")
            .satisfies(a -> assertThat(a.getCompteSrc()).as("check compteSrc").isEqualTo(expected.getCompteSrc()))
            .satisfies(a -> assertThat(a.getCompteBenef()).as("check compteBenef").isEqualTo(expected.getCompteBenef()))
            .satisfies(a -> assertThat(a.getMontant()).as("check montant").isEqualTo(expected.getMontant()))
            .satisfies(a -> assertThat(a.getCode()).as("check code").isEqualTo(expected.getCode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertMondatUpdatableRelationshipsEquals(Mondat expected, Mondat actual) {
        assertThat(actual)
            .as("Verify Mondat relationships")
            .satisfies(a -> assertThat(a.getCompte()).as("check compte").isEqualTo(expected.getCompte()));
    }
}
